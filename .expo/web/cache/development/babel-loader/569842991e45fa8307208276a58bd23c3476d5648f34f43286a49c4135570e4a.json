{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jorge\\\\Desktop\\\\innovadesk\\\\Context\\\\AuthContext.tsx\",\n  _this = this;\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserData = _useState2[1];\n  var login = function login(user) {\n    setUserData(user);\n  };\n  var logout = function logout() {\n    setUserData(null);\n  };\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      userData: userData,\n      login: login,\n      logout: logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","userData","setUserData","login","user","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_this","useAuth","context","Error"],"sources":["C:/Users/jorge/Desktop/innovadesk/Context/AuthContext.tsx"],"sourcesContent":["// AuthContext.tsx\r\nimport React, { createContext, useContext, ReactNode, useState } from 'react';\r\n\r\ninterface UserData {\r\n  name: string;\r\n  email: string;\r\n  phone: string;\r\n  address: string;\r\n  // Añade otros campos según sea necesario\r\n}\r\n\r\ninterface AuthContextType {\r\n  userData: UserData | null;\r\n  login: (user: UserData) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [userData, setUserData] = useState<UserData | null>(null);\r\n\r\n  const login = (user: UserData) => {\r\n    setUserData(user);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUserData(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ userData, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAaC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgB9E,IAAMC,WAAW,GAAGL,aAAa,CAA8BM,SAAS,CAAC;AAMzE,OAAO,IAAMC,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAClE,IAAAC,SAAA,GAAgCR,QAAQ,CAAkB,IAAI,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxDG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,KAAK,GAAG,SAARA,KAAKA,CAAIC,IAAc,EAAK;IAChCF,WAAW,CAACE,IAAI,CAAC;EACnB,CAAC;EAED,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACnBH,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,OACEV,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEN,QAAQ,EAARA,QAAQ;MAAEE,KAAK,EAALA,KAAK;MAAEE,MAAM,EAANA;IAAO,CAAE;IAAAR,QAAA,EACtDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACW,CAAC;AAE3B,CAAC;AAED,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAC3B,IAAMC,OAAO,GAAGzB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}